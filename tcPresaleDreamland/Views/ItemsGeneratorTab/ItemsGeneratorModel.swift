//
//  ItemsGeneratorModel.swift
//  tcPresaleDreamland
//
//  Created by Sedoykin Alexey on 04/06/2025.
//

import Foundation

/// Response wrapper that matches the JSON produced by `llmHelper.generateItemsPrompt`.
struct DeepSeektemsResponse: Codable {
    let items: [Item]
}

/// Single item generated by the LLM.
struct Item: Codable, Identifiable, Equatable {
    let id = UUID()         // Unique per UI session (not sent to backend)
    let name: String        // Name suggested by LLM
    let desc: String        // Short description
    var type: String = "Item"  // Default Teamcenter type
    var isEnabled: Bool = true // User can untick to skip creation

    // We only decode *name* and *desc* â€“ the other fields keep defaults.
    enum CodingKeys: String, CodingKey { case name, desc }

    init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        name = try container.decode(String.self, forKey: .name)
        desc = try container.decode(String.self, forKey: .desc)
    }
}

/// Result returned after attempting to create an item in Teamcenter.
/// `success == false` means backend returned nil UID or revision.
struct ItemCreationResult {
    let itemName: String
    let success: Bool
}

